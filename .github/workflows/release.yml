name: build-and-release
on:
  workflow_dispatch:  # GitHub Actions 페이지에서 수동으로 실행
  push:
    tags:
      - 'v*'  # v1.0.0 같은 태그를 push하면 실행

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Extract VERSION from Python file
        id: get_version
        run: |
          $version = (Select-String -Path "pdf_email_sender_gui.py" -Pattern 'VERSION = "(.+)"').Matches.Groups[1].Value
          echo "VERSION=$version" >> $env:GITHUB_OUTPUT
          echo "Detected VERSION: $version"
        shell: pwsh

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pillow

      - name: Build exe
        run: |
          pyinstaller -F -w -i favicon/favicon.ico --add-data "favicon;favicon" -n Ato pdf_email_sender_gui.py

      - name: Zip artifact
        run: |
          powershell -Command "Compress-Archive -Path dist\\Ato.exe -DestinationPath dist\\Ato_windows_v${{ steps.get_version.outputs.VERSION }}.zip -Force"

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          name: Release v${{ steps.get_version.outputs.VERSION }}
          body: |
            ## Ato v${{ steps.get_version.outputs.VERSION }}
            
            자동 빌드된 Windows 실행 파일입니다.
            
            ### 변경 사항
            - 자동 생성된 릴리스
          files: |
            dist/Ato_windows_v${{ steps.get_version.outputs.VERSION }}.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
